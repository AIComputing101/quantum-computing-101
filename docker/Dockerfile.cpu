# CPU-Only Dockerfile for Quantum Computing 101
# Lightweight container for CPU-based quantum simulations

FROM python:3.12-slim

# Set labels for metadata
LABEL maintainer="Quantum Computing 101"
LABEL version="1.0"
LABEL variant="cpu"
LABEL description="CPU-only quantum computing examples - lightweight and fast"

# Set environment variables for CPU optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV MPLBACKEND=Agg
ENV QC101_CONTAINER=1
ENV QC101_VARIANT=cpu
ENV OMP_NUM_THREADS=4
ENV MKL_NUM_THREADS=4

# Install system dependencies optimized for CPU
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libc6-dev \
    libffi-dev \
    libssl-dev \
    libopenblas-dev \
    liblapack-dev \
    make \
    git \
    curl \
    htop \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash --uid 1000 qc101

# Set working directory
WORKDIR /home/qc101/quantum-computing-101

# Copy requirements files
COPY docker/requirements/ /tmp/requirements/

# Install Python dependencies with CPU optimizations
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /tmp/requirements/cpu.txt

# Copy application code
COPY --chown=qc101:qc101 . /home/qc101/quantum-computing-101/

# Install the package in development mode
RUN pip install --no-cache-dir -e .

# Create output directory for results
RUN mkdir -p /home/qc101/quantum-computing-101/outputs && \
    chown -R qc101:qc101 /home/qc101/quantum-computing-101/outputs

# Switch to non-root user
USER qc101

# Set default working directory to examples
WORKDIR /home/qc101/quantum-computing-101/examples

# Health check to verify quantum computing stack
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import qiskit; import numpy; print('Quantum Computing 101 CPU container healthy')"

# Default command - show available examples
CMD ["python", "-c", "import sys; sys.path.append('..'); from utils.cli import main; main(['list'])"]